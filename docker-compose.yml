services:
  producer-app:
    container_name: producer-app
    build:
      context: ./
      dockerfile: ./producer/Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ./.env
    depends_on:
      - kafka

  consumer-app:
    container_name: consumer-app
    build:
      context: ./
      dockerfile: ./consumer/Dockerfile
    ports:
      - "3002:3002"
    env_file:
      - ./.env
    depends_on:
      - producer-app
      - kafka
      - mongodb

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb_data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKAJS_NO_PARTITIONER_WARNING: 1
    depends_on:
      - zookeeper

networks:
  default:
    name: twilio-kafka-network
